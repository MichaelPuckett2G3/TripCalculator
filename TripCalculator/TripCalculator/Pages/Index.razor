@page "/"
@inject ManageExpensesViewModel manageExpensesViewModel
@inject ITripCalculator tripCalculator;
@inject Dal.IMockTrip tripMocker;

<div class="text-center">
    <h1>Trip Calculator</h1>

    <div class="container">
        <div class="row">
            <div class="col">
                <ManageStudents />
            </div>
            <div class="col">
                <ManageExpenses />
            </div>
        </div>
    </div>

    <h2>Trip Details</h2>
    
    <button class="btn btn-secondary" @onclick="LoadMockTrip">Load Mock</button>
    <button class="btn btn-primary" @onclick="CalculateTrip">Calculate Trip</button>
    <h2>Trip Expenses</h2>
    @if (Trip?.Expenses is not null)
    {
        <label>Expense</label>
        @foreach (var expense in Trip.Expenses)
        {
            <p>@expense.Student.Name has expense for @expense.Name at @expense.Cost.ToString("C")</p>
        }
    }
    @if (MoneyDebtReport is not null)
    {
        <label>Debtors</label>
        @foreach (var debtor in MoneyDebtReport.Debtors)
        {
            <p>@debtor.Student.Name owes @debtor.Amount.ToString("C")</p>
        }

        <label>Creditors</label>
        @foreach (var creditor in MoneyDebtReport.Creditors)
        {
            <p>@creditor.Student.Name receives @creditor.Amount.ToString("C")</p>
        }
    }
</div>

@code {
    public Trip Trip { get; set; } = new Trip();
    public int SelectedExpenseId { get; set; }
    public MoneyDebtReport MoneyDebtReport { get; set; }

    public void AddExpense()
    {
        var expense = manageExpensesViewModel.Expenses.FirstOrDefault(x => x.Id == SelectedExpenseId);
        if (expense == null) return;
        Trip.Expenses.Add(expense);
        SelectedExpenseId = 0;
    }

    public void CalculateTrip()
    {
        MoneyDebtReport = tripCalculator.CalculateDebt(Trip);
    }

    public void LoadMockTrip()
    {
        Trip = tripMocker.GetTrip();
    }
}